|Block1
binary[0] <= BCD_binario:inst.binary[0]
binary[1] <= BCD_binario:inst.binary[1]
binary[2] <= BCD_binario:inst.binary[2]
binary[3] <= BCD_binario:inst.binary[3]
binary[4] <= BCD_binario:inst.binary[4]
binary[5] <= BCD_binario:inst.binary[5]
binary[6] <= BCD_binario:inst.binary[6]
binary[7] <= BCD_binario:inst.binary[7]
CLK => BCD_binario:inst.clk
CLK => decodificador:inst1.clk
CLK => decodificador:inst2.clk
CLK => decodificador:inst3.clk
START => BCD_binario:inst.start
CHARGE => BCD_binario:inst.charge
RESET => BCD_binario:inst.reset
RESET => decodificador:inst1.reset
RESET => decodificador:inst2.reset
RESET => decodificador:inst3.reset
CENTENAS[0] => BCD_binario:inst.cent[0]
CENTENAS[0] => decodificador:inst1.numero[0]
CENTENAS[1] => BCD_binario:inst.cent[1]
CENTENAS[1] => decodificador:inst1.numero[1]
CENTENAS[2] => BCD_binario:inst.cent[2]
CENTENAS[2] => decodificador:inst1.numero[2]
CENTENAS[3] => BCD_binario:inst.cent[3]
CENTENAS[3] => decodificador:inst1.numero[3]
DECENAS[0] => BCD_binario:inst.dec[0]
DECENAS[0] => decodificador:inst2.numero[0]
DECENAS[1] => BCD_binario:inst.dec[1]
DECENAS[1] => decodificador:inst2.numero[1]
DECENAS[2] => BCD_binario:inst.dec[2]
DECENAS[2] => decodificador:inst2.numero[2]
DECENAS[3] => BCD_binario:inst.dec[3]
DECENAS[3] => decodificador:inst2.numero[3]
UNIDADES[0] => BCD_binario:inst.uni[0]
UNIDADES[0] => decodificador:inst3.numero[0]
UNIDADES[1] => BCD_binario:inst.uni[1]
UNIDADES[1] => decodificador:inst3.numero[1]
UNIDADES[2] => BCD_binario:inst.uni[2]
UNIDADES[2] => decodificador:inst3.numero[2]
UNIDADES[3] => BCD_binario:inst.uni[3]
UNIDADES[3] => decodificador:inst3.numero[3]
Centena[0] <= decodificador:inst1.output[0]
Centena[1] <= decodificador:inst1.output[1]
Centena[2] <= decodificador:inst1.output[2]
Centena[3] <= decodificador:inst1.output[3]
Centena[4] <= decodificador:inst1.output[4]
Centena[5] <= decodificador:inst1.output[5]
Centena[6] <= decodificador:inst1.output[6]
Centena[7] <= decodificador:inst1.output[7]
Decena[0] <= decodificador:inst2.output[0]
Decena[1] <= decodificador:inst2.output[1]
Decena[2] <= decodificador:inst2.output[2]
Decena[3] <= decodificador:inst2.output[3]
Decena[4] <= decodificador:inst2.output[4]
Decena[5] <= decodificador:inst2.output[5]
Decena[6] <= decodificador:inst2.output[6]
Decena[7] <= decodificador:inst2.output[7]
Unidade[0] <= decodificador:inst3.output[0]
Unidade[1] <= decodificador:inst3.output[1]
Unidade[2] <= decodificador:inst3.output[2]
Unidade[3] <= decodificador:inst3.output[3]
Unidade[4] <= decodificador:inst3.output[4]
Unidade[5] <= decodificador:inst3.output[5]
Unidade[6] <= decodificador:inst3.output[6]
Unidade[7] <= decodificador:inst3.output[7]


|Block1|BCD_binario:inst
clk => binary_reg[0].CLK
clk => binary_reg[1].CLK
clk => binary_reg[2].CLK
clk => binary_reg[3].CLK
clk => binary_reg[4].CLK
clk => binary_reg[5].CLK
clk => binary_reg[6].CLK
clk => binary_reg[7].CLK
clk => cent_reg[0].CLK
clk => cent_reg[1].CLK
clk => cent_reg[2].CLK
clk => cent_reg[3].CLK
clk => dec_reg[0].CLK
clk => dec_reg[1].CLK
clk => dec_reg[2].CLK
clk => dec_reg[3].CLK
clk => uni_reg[0].CLK
clk => uni_reg[1].CLK
clk => uni_reg[2].CLK
clk => uni_reg[3].CLK
clk => i[0].CLK
clk => i[1].CLK
clk => i[2].CLK
clk => state~2.DATAIN
start => process_0.IN0
start => process_0.IN0
charge => process_0.IN1
charge => process_0.IN1
reset => binary_reg[0].ACLR
reset => binary_reg[1].ACLR
reset => binary_reg[2].ACLR
reset => binary_reg[3].ACLR
reset => binary_reg[4].ACLR
reset => binary_reg[5].ACLR
reset => binary_reg[6].ACLR
reset => binary_reg[7].ACLR
reset => cent_reg[0].ACLR
reset => cent_reg[1].ACLR
reset => cent_reg[2].ACLR
reset => cent_reg[3].ACLR
reset => dec_reg[0].ACLR
reset => dec_reg[1].ACLR
reset => dec_reg[2].ACLR
reset => dec_reg[3].ACLR
reset => uni_reg[0].ACLR
reset => uni_reg[1].ACLR
reset => uni_reg[2].ACLR
reset => uni_reg[3].ACLR
reset => i[0].PRESET
reset => i[1].PRESET
reset => i[2].PRESET
reset => state~4.DATAIN
cent[0] => cent_reg.DATAB
cent[1] => cent_reg.DATAB
cent[2] => cent_reg.DATAB
cent[3] => cent_reg.DATAB
dec[0] => dec_reg.DATAB
dec[1] => dec_reg.DATAB
dec[2] => dec_reg.DATAB
dec[3] => dec_reg.DATAB
uni[0] => uni_reg.DATAB
uni[1] => uni_reg.DATAB
uni[2] => uni_reg.DATAB
uni[3] => uni_reg.DATAB
valid <= valid.DB_MAX_OUTPUT_PORT_TYPE
binary[0] <= binary_reg[0].DB_MAX_OUTPUT_PORT_TYPE
binary[1] <= binary_reg[1].DB_MAX_OUTPUT_PORT_TYPE
binary[2] <= binary_reg[2].DB_MAX_OUTPUT_PORT_TYPE
binary[3] <= binary_reg[3].DB_MAX_OUTPUT_PORT_TYPE
binary[4] <= binary_reg[4].DB_MAX_OUTPUT_PORT_TYPE
binary[5] <= binary_reg[5].DB_MAX_OUTPUT_PORT_TYPE
binary[6] <= binary_reg[6].DB_MAX_OUTPUT_PORT_TYPE
binary[7] <= binary_reg[7].DB_MAX_OUTPUT_PORT_TYPE


|Block1|decodificador:inst1
numero[0] => num_int.DATAB
numero[1] => num_int.DATAB
numero[2] => num_int.DATAB
numero[3] => num_int.DATAB
valido => num_int.OUTPUTSELECT
valido => num_int.OUTPUTSELECT
valido => num_int.OUTPUTSELECT
valido => num_int.OUTPUTSELECT
reset => num_int.OUTPUTSELECT
reset => num_int.OUTPUTSELECT
reset => num_int.OUTPUTSELECT
reset => num_int.OUTPUTSELECT
clk => num_int[0].CLK
clk => num_int[1].CLK
clk => num_int[2].CLK
clk => num_int[3].CLK
output[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= <VCC>


|Block1|decodificador:inst2
numero[0] => num_int.DATAB
numero[1] => num_int.DATAB
numero[2] => num_int.DATAB
numero[3] => num_int.DATAB
valido => num_int.OUTPUTSELECT
valido => num_int.OUTPUTSELECT
valido => num_int.OUTPUTSELECT
valido => num_int.OUTPUTSELECT
reset => num_int.OUTPUTSELECT
reset => num_int.OUTPUTSELECT
reset => num_int.OUTPUTSELECT
reset => num_int.OUTPUTSELECT
clk => num_int[0].CLK
clk => num_int[1].CLK
clk => num_int[2].CLK
clk => num_int[3].CLK
output[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= <VCC>


|Block1|decodificador:inst3
numero[0] => num_int.DATAB
numero[1] => num_int.DATAB
numero[2] => num_int.DATAB
numero[3] => num_int.DATAB
valido => num_int.OUTPUTSELECT
valido => num_int.OUTPUTSELECT
valido => num_int.OUTPUTSELECT
valido => num_int.OUTPUTSELECT
reset => num_int.OUTPUTSELECT
reset => num_int.OUTPUTSELECT
reset => num_int.OUTPUTSELECT
reset => num_int.OUTPUTSELECT
clk => num_int[0].CLK
clk => num_int[1].CLK
clk => num_int[2].CLK
clk => num_int[3].CLK
output[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= <VCC>


